import { usePageLang, withBase } from '@vuepress/client';
import { Waline } from '@waline/client/dist/component';
import { computed, defineComponent, h, toRefs } from 'vue';
import { useRoute } from 'vue-router';
import '@waline/client/dist/waline.css';
import '../styles/waline.css';
export default defineComponent({
    name: 'Waline',
    props: {
        options: {
            type: Object,
            default() {
                return {};
            },
        },
    },
    setup(props) {
        const route = useRoute();
        const { options } = toRefs(props);
        const lang = usePageLang();
        const walineOption = computed(() => ({
            lang: lang.value || 'zh-CN',
            dark: 'html.dark',
            path: withBase(route.path),
            ...options.value,
        }));
        return () => h('div', {
            class: 'reco-waline-wrapper',
        }, h(Waline, walineOption.value));
    },
});
